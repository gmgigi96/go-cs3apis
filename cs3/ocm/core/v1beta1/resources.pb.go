// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/ocm/core/v1beta1/resources.proto

package corev1beta1

import (
	fmt "fmt"
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/sharing/ocm/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines the type of share based on its recipient.
type ShareType int32

const (
	// Share of type user.
	ShareType_SHARE_TYPE_USER ShareType = 0
	// Share of type group.
	ShareType_SHARE_TYPE_GROUP ShareType = 1
)

var ShareType_name = map[int32]string{
	0: "SHARE_TYPE_USER",
	1: "SHARE_TYPE_GROUP",
}

var ShareType_value = map[string]int32{
	"SHARE_TYPE_USER":  0,
	"SHARE_TYPE_GROUP": 1,
}

func (x ShareType) String() string {
	return proto.EnumName(ShareType_name, int32(x))
}

func (ShareType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2e4d9c6821c1d4ee, []int{0}
}

// The protocol which is used to establish synchronisation.
type Protocol struct {
	// REQUIRED.
	//
	// Types that are valid to be assigned to Term:
	//	*Protocol_WebdapOptions
	//	*Protocol_WebappOptions
	//	*Protocol_DatatxOprions
	//	*Protocol_GenericOptions
	Term                 isProtocol_Term `protobuf_oneof:"term"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Protocol) Reset()         { *m = Protocol{} }
func (m *Protocol) String() string { return proto.CompactTextString(m) }
func (*Protocol) ProtoMessage()    {}
func (*Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e4d9c6821c1d4ee, []int{0}
}

func (m *Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol.Unmarshal(m, b)
}
func (m *Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol.Marshal(b, m, deterministic)
}
func (m *Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol.Merge(m, src)
}
func (m *Protocol) XXX_Size() int {
	return xxx_messageInfo_Protocol.Size(m)
}
func (m *Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol proto.InternalMessageInfo

type isProtocol_Term interface {
	isProtocol_Term()
}

type Protocol_WebdapOptions struct {
	WebdapOptions *WebDAVProtocol `protobuf:"bytes,1,opt,name=webdap_options,json=webdapOptions,proto3,oneof"`
}

type Protocol_WebappOptions struct {
	WebappOptions *WebappProtocol `protobuf:"bytes,2,opt,name=webapp_options,json=webappOptions,proto3,oneof"`
}

type Protocol_DatatxOprions struct {
	DatatxOprions *DatatxProtocol `protobuf:"bytes,3,opt,name=datatx_oprions,json=datatxOprions,proto3,oneof"`
}

type Protocol_GenericOptions struct {
	GenericOptions *v1beta1.Opaque `protobuf:"bytes,4,opt,name=generic_options,json=genericOptions,proto3,oneof"`
}

func (*Protocol_WebdapOptions) isProtocol_Term() {}

func (*Protocol_WebappOptions) isProtocol_Term() {}

func (*Protocol_DatatxOprions) isProtocol_Term() {}

func (*Protocol_GenericOptions) isProtocol_Term() {}

func (m *Protocol) GetTerm() isProtocol_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *Protocol) GetWebdapOptions() *WebDAVProtocol {
	if x, ok := m.GetTerm().(*Protocol_WebdapOptions); ok {
		return x.WebdapOptions
	}
	return nil
}

func (m *Protocol) GetWebappOptions() *WebappProtocol {
	if x, ok := m.GetTerm().(*Protocol_WebappOptions); ok {
		return x.WebappOptions
	}
	return nil
}

func (m *Protocol) GetDatatxOprions() *DatatxProtocol {
	if x, ok := m.GetTerm().(*Protocol_DatatxOprions); ok {
		return x.DatatxOprions
	}
	return nil
}

func (m *Protocol) GetGenericOptions() *v1beta1.Opaque {
	if x, ok := m.GetTerm().(*Protocol_GenericOptions); ok {
		return x.GenericOptions
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Protocol) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Protocol_WebdapOptions)(nil),
		(*Protocol_WebappOptions)(nil),
		(*Protocol_DatatxOprions)(nil),
		(*Protocol_GenericOptions)(nil),
	}
}

// Defines the options for the WebDAV protocol.
type WebDAVProtocol struct {
	// REQUIRED.
	// Secret used to access the resource.
	SharedSecret string `protobuf:"bytes,1,opt,name=shared_secret,json=sharedSecret,proto3" json:"shared_secret,omitempty"`
	// REQUIRED.
	// Permissions of the shared resource.
	Permissions *v1beta11.SharePermissions `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	// REQUIRED.
	// WebDAV URI used to access the resource.
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebDAVProtocol) Reset()         { *m = WebDAVProtocol{} }
func (m *WebDAVProtocol) String() string { return proto.CompactTextString(m) }
func (*WebDAVProtocol) ProtoMessage()    {}
func (*WebDAVProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e4d9c6821c1d4ee, []int{1}
}

func (m *WebDAVProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebDAVProtocol.Unmarshal(m, b)
}
func (m *WebDAVProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebDAVProtocol.Marshal(b, m, deterministic)
}
func (m *WebDAVProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebDAVProtocol.Merge(m, src)
}
func (m *WebDAVProtocol) XXX_Size() int {
	return xxx_messageInfo_WebDAVProtocol.Size(m)
}
func (m *WebDAVProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_WebDAVProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_WebDAVProtocol proto.InternalMessageInfo

func (m *WebDAVProtocol) GetSharedSecret() string {
	if m != nil {
		return m.SharedSecret
	}
	return ""
}

func (m *WebDAVProtocol) GetPermissions() *v1beta11.SharePermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *WebDAVProtocol) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// Defines the options for the Webapp protocol.
type WebappProtocol struct {
	// REQUIRED.
	// Template URI to open the resource with a remote app.
	UriTemplate          string   `protobuf:"bytes,1,opt,name=uriTemplate,proto3" json:"uriTemplate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebappProtocol) Reset()         { *m = WebappProtocol{} }
func (m *WebappProtocol) String() string { return proto.CompactTextString(m) }
func (*WebappProtocol) ProtoMessage()    {}
func (*WebappProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e4d9c6821c1d4ee, []int{2}
}

func (m *WebappProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebappProtocol.Unmarshal(m, b)
}
func (m *WebappProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebappProtocol.Marshal(b, m, deterministic)
}
func (m *WebappProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebappProtocol.Merge(m, src)
}
func (m *WebappProtocol) XXX_Size() int {
	return xxx_messageInfo_WebappProtocol.Size(m)
}
func (m *WebappProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_WebappProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_WebappProtocol proto.InternalMessageInfo

func (m *WebappProtocol) GetUriTemplate() string {
	if m != nil {
		return m.UriTemplate
	}
	return ""
}

// Defines the options for the Datatx protocol.
type DatatxProtocol struct {
	// REQUIRED.
	// Secret used to access the source of the data transfer.
	SharedSecret string `protobuf:"bytes,1,opt,name=shared_secret,json=sharedSecret,proto3" json:"shared_secret,omitempty"`
	// REQUIRED.
	// Source URI for the data transfer.
	SourceUri string `protobuf:"bytes,2,opt,name=source_uri,json=sourceUri,proto3" json:"source_uri,omitempty"`
	// REQUIRED.
	// Size in bytes of the source.
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatatxProtocol) Reset()         { *m = DatatxProtocol{} }
func (m *DatatxProtocol) String() string { return proto.CompactTextString(m) }
func (*DatatxProtocol) ProtoMessage()    {}
func (*DatatxProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e4d9c6821c1d4ee, []int{3}
}

func (m *DatatxProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatatxProtocol.Unmarshal(m, b)
}
func (m *DatatxProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatatxProtocol.Marshal(b, m, deterministic)
}
func (m *DatatxProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatatxProtocol.Merge(m, src)
}
func (m *DatatxProtocol) XXX_Size() int {
	return xxx_messageInfo_DatatxProtocol.Size(m)
}
func (m *DatatxProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_DatatxProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_DatatxProtocol proto.InternalMessageInfo

func (m *DatatxProtocol) GetSharedSecret() string {
	if m != nil {
		return m.SharedSecret
	}
	return ""
}

func (m *DatatxProtocol) GetSourceUri() string {
	if m != nil {
		return m.SourceUri
	}
	return ""
}

func (m *DatatxProtocol) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterEnum("cs3.ocm.core.v1beta1.ShareType", ShareType_name, ShareType_value)
	proto.RegisterType((*Protocol)(nil), "cs3.ocm.core.v1beta1.Protocol")
	proto.RegisterType((*WebDAVProtocol)(nil), "cs3.ocm.core.v1beta1.WebDAVProtocol")
	proto.RegisterType((*WebappProtocol)(nil), "cs3.ocm.core.v1beta1.WebappProtocol")
	proto.RegisterType((*DatatxProtocol)(nil), "cs3.ocm.core.v1beta1.DatatxProtocol")
}

func init() {
	proto.RegisterFile("cs3/ocm/core/v1beta1/resources.proto", fileDescriptor_2e4d9c6821c1d4ee)
}

var fileDescriptor_2e4d9c6821c1d4ee = []byte{
	// 485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcb, 0x6a, 0xdb, 0x40,
	0x14, 0x8d, 0x64, 0x13, 0xea, 0xeb, 0x46, 0x31, 0x53, 0x2f, 0xd2, 0x40, 0x20, 0xb8, 0x81, 0x3e,
	0x16, 0x32, 0x8e, 0xa1, 0xfb, 0xf8, 0x41, 0x0d, 0xa5, 0x48, 0x8c, 0xed, 0x94, 0x16, 0x83, 0x18,
	0x8f, 0x2f, 0x89, 0x20, 0xf2, 0x4c, 0x67, 0xe4, 0xb6, 0xe9, 0x77, 0xf4, 0x0b, 0xba, 0xec, 0x7f,
	0x74, 0xd3, 0xaf, 0x2a, 0x73, 0x25, 0x27, 0x4a, 0x49, 0x1f, 0xbb, 0xd1, 0xb9, 0xe7, 0x1c, 0xce,
	0x9c, 0xab, 0x81, 0x13, 0x69, 0xfb, 0x5d, 0x25, 0xb3, 0xae, 0x54, 0x06, 0xbb, 0x1f, 0x7b, 0x4b,
	0xcc, 0x45, 0xaf, 0x6b, 0xd0, 0xaa, 0x8d, 0x91, 0x68, 0x43, 0x6d, 0x54, 0xae, 0x58, 0x5b, 0xda,
	0x7e, 0xa8, 0x64, 0x16, 0x3a, 0x56, 0x58, 0xb2, 0x0e, 0x9f, 0x3a, 0xad, 0xbd, 0x14, 0x26, 0x5d,
	0x5f, 0x90, 0xc7, 0x1f, 0xe4, 0x87, 0x47, 0x8e, 0x98, 0x5f, 0x6b, 0xb4, 0x37, 0x14, 0xfa, 0x2a,
	0xc6, 0x9d, 0x1f, 0x3e, 0x3c, 0x88, 0xdd, 0x49, 0xaa, 0x2b, 0xf6, 0x06, 0x82, 0x4f, 0xb8, 0x5c,
	0x09, 0x9d, 0x28, 0x9d, 0xa7, 0x6a, 0x6d, 0x0f, 0xbc, 0x63, 0xef, 0x59, 0xf3, 0xf4, 0x24, 0xbc,
	0x2f, 0x43, 0xf8, 0x16, 0x97, 0xa3, 0xb3, 0xf3, 0xad, 0x7a, 0xb2, 0xc3, 0xf7, 0x0a, 0x75, 0x54,
	0x88, 0x4b, 0x3b, 0xa1, 0x6f, 0xed, 0xfc, 0x7f, 0xd8, 0x09, 0xad, 0x7f, 0xb3, 0x13, 0xba, 0x6a,
	0xb7, 0x12, 0xb9, 0xc8, 0x3f, 0x27, 0x4a, 0x1b, 0xb2, 0xab, 0xfd, 0xcd, 0x6e, 0x44, 0xdc, 0xaa,
	0x5d, 0xa1, 0x8e, 0x0a, 0x31, 0x1b, 0xc1, 0xfe, 0x05, 0xae, 0xd1, 0xa4, 0xf2, 0x26, 0x5e, 0x9d,
	0xfc, 0x1e, 0x93, 0x5f, 0x51, 0xd2, 0xd6, 0x2c, 0xd2, 0xe2, 0xc3, 0x06, 0x27, 0x3b, 0x3c, 0x28,
	0x35, 0x65, 0xa8, 0xc1, 0x2e, 0xd4, 0x73, 0x34, 0x59, 0xe7, 0xab, 0x07, 0xc1, 0xdd, 0x3e, 0xd8,
	0x13, 0xd8, 0x73, 0x0b, 0xc2, 0x55, 0x62, 0x51, 0x1a, 0xcc, 0xa9, 0xcc, 0x06, 0x7f, 0x58, 0x80,
	0x53, 0xc2, 0xd8, 0x6b, 0x68, 0x6a, 0x34, 0x59, 0x6a, 0x6d, 0xa5, 0xa0, 0xe7, 0x94, 0xa0, 0xdc,
	0x2e, 0xdd, 0x6c, 0x9b, 0x63, 0xea, 0xb4, 0xf1, 0xad, 0x80, 0x57, 0xd5, 0xac, 0x05, 0xb5, 0x8d,
	0x49, 0xa9, 0x96, 0x06, 0x77, 0xc7, 0xce, 0x29, 0xa5, 0xaa, 0xd4, 0xca, 0x8e, 0xa1, 0xb9, 0x31,
	0xe9, 0x0c, 0x33, 0x7d, 0x25, 0x72, 0x2c, 0x33, 0x55, 0xa1, 0xce, 0x25, 0x04, 0x77, 0xbb, 0xfb,
	0xbf, 0x9b, 0x1c, 0x01, 0x14, 0x7f, 0x5e, 0xe2, 0x32, 0xf8, 0xc4, 0x68, 0x14, 0xc8, 0xdc, 0xa4,
	0x8c, 0x41, 0xdd, 0xa6, 0x5f, 0x90, 0xc2, 0xd5, 0x39, 0x9d, 0x5f, 0xbc, 0x84, 0x06, 0x5d, 0x68,
	0x76, 0xad, 0x91, 0x3d, 0x82, 0xfd, 0xe9, 0xe4, 0x8c, 0x8f, 0x93, 0xd9, 0xbb, 0x78, 0x9c, 0xcc,
	0xa7, 0x63, 0xde, 0xda, 0x61, 0x6d, 0x68, 0x55, 0xc0, 0x57, 0x3c, 0x9a, 0xc7, 0x2d, 0x6f, 0x90,
	0xc1, 0x81, 0x54, 0xd9, 0xbd, 0x6b, 0x1f, 0x04, 0x7c, 0xfb, 0x00, 0x28, 0x7e, 0xec, 0xbd, 0x6f,
	0xba, 0x79, 0x39, 0xfe, 0xe6, 0xd7, 0x86, 0xd1, 0xf0, 0xbb, 0xdf, 0x1e, 0xda, 0x7e, 0x18, 0xc9,
	0x2c, 0x1c, 0x3a, 0xed, 0x79, 0x6f, 0xe0, 0x86, 0x3f, 0x09, 0x5e, 0x44, 0x32, 0x5b, 0x38, 0x78,
	0x51, 0xc2, 0xcb, 0x5d, 0x7a, 0x2a, 0xfd, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xae, 0xca,
	0x8f, 0xb0, 0x03, 0x00, 0x00,
}
